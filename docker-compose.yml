version: '3.8'

services:
  # FastAPI Backend
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: object-detection-backend
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://frontend:3000}
      - MODEL_PATH=${MODEL_PATH:-/app/models/yolo11l.pt}
      - PYTHONPATH=/app
    volumes:
      - ./models:/app/models:rw
      - ./temp:/app/temp:rw
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - object-detection-network

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: object-detection-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      - NODE_ENV=production
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - object-detection-network

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: object-detection-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - object-detection-network
    profiles:
      - production

networks:
  object-detection-network:
    driver: bridge

volumes:
  models:
    driver: local
  temp:
    driver: local 